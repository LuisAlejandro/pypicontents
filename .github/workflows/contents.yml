name: Contents

on:
  workflow_dispatch:
  schedule:
    - cron: '00 3 * 1 *'

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - lrange: "0-9"
          - lrange: "a"
          - lrange: "b"
          - lrange: "c"
          - lrange: "d"
          - lrange: "e"
          - lrange: "f"
          - lrange: "g"
          - lrange: "h"
          - lrange: "i"
          - lrange: "j"
          - lrange: "k"
          - lrange: "l"
          - lrange: "m"
          - lrange: "n"
          - lrange: "o"
          - lrange: "p"
          - lrange: "q"
          - lrange: "r"
          - lrange: "s"
          - lrange: "t"
          - lrange: "u"
          - lrange: "v"
          - lrange: "w"
          - lrange: "x"
          - lrange: "y"
          - lrange: "z"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: contents
          lfs: false
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Processing python packages
        uses: nick-invision/retry@v2
        env:
          LRANGE: ${{ matrix.lrange }}
        with:
          max_attempts: 3
          timeout_minutes: 90
          command: |
            docker build -t dockershelf/pypicontents:2.7-3.7 docker/2.7-3.7
            docker run -v ${PWD}:${PWD} -w ${PWD} -u $(id -u):$(id -g) \
              dockershelf/pypicontents:2.7-3.7 \
                pypicontents pypi -o data/${LRANGE}/pypi.json \
                  -f logs/${LRANGE}/pypi.log -R ${LRANGE}
      - name: Commiting changes
        uses: nick-invision/retry@v2
        env:
          LRANGE: ${{ matrix.lrange }}
        with:
          max_attempts: 3
          timeout_minutes: 90
          command: |
            git config --global user.name "Luis Alejandro Martínez Faneyth"
            git config --global user.email "luis@luisalejandro.org"
            git add --all .
            git commit -a -m "[ci skip] Updating PyPIContents index (PyPI letter ${LRANGE})."
            git pull --rebase origin contents
            git push -f origin contents

  stdlib:
    name: Generating Standard Library database
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: contents
          lfs: true
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Generating standard library database and merging indexes
        uses: nick-invision/retry@v2
        with:
          max_attempts: 3
          timeout_minutes: 90
          command: |
            for PYVER in 2.6 2.7 3.2 3.4 3.5 3.6 3.7 3.8 3.9; do
                docker build -t dockershelf/pypicontents:${PYVER} docker/${PYVER}
                docker run -v ${PWD}:${PWD} -w ${PWD} -u $(id -u):$(id -g) \
                    dockershelf/pypicontents:${PYVER} \
                        pypicontents stdlib -o stdlib/${PYVER}/stdlib.json
            done

            docker run -v ${PWD}:${PWD} -w ${PWD} -u $(id -u):$(id -g) \
                dockershelf/pypicontents:3.7 \
                    pypicontents merge -o pypi.json -i data
            docker run -v ${PWD}:${PWD} -w ${PWD} -u $(id -u):$(id -g) \
                dockershelf/pypicontents:3.7 \
                    pypicontents merge -o stdlib.json -i stdlib
            docker run -v ${PWD}:${PWD} -w ${PWD} -u $(id -u):$(id -g) \
                dockershelf/pypicontents:3.7 \
                    pypicontents errors -o errors.json -i logs
            docker run -v ${PWD}:${PWD} -w ${PWD} -u $(id -u):$(id -g) \
                dockershelf/pypicontents:3.7 \
                    pypicontents stats -o stats.txt -i logs

            git config --global user.name "Luis Alejandro Martínez Faneyth"
            git config --global user.email "luis@luisalejandro.org"
            git reset 7e48a190b8c42b1820a6c847f20f08ca925ad6fb
            git add --all .
            git commit -a -m "[ci skip] Updating PyPIContents index (stdlib and merge)."
            git pull --rebase origin contents
            git push -f origin contents
