name: Pull Request

on:
  pull_request_target:
    types:
      - opened
      - ready_for_review
      - synchronize
      - reopened
    branches:
      - develop

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    if: github.repository == 'LuisAlejandro/pypicontents'
    strategy:
      matrix:
        include:
          - python-version: "3.8"
            toxenv: "py38"
          - python-version: "3.9"
            toxenv: "py39"
          - python-version: "3.10"
            toxenv: "py310"
          - python-version: "3.11.0-alpha.5"
            toxenv: "py311"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: develop
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Installing dependencies
        run: |
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Measuring coverage
        env:
          TOXENV: ${{ matrix.toxenv }}
          PYTHON_VERSION: ${{ matrix.python-version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          tox -e ${TOXENV}
          coveralls --service=github || coveralls --service=github-actions
      - name: Functional test
        env:
          TOXENV: ${{ matrix.toxenv }}
          PYTHON_VERSION: ${{ matrix.python-version }}
        run: |
          if [ "${TOXENV}" == "py311" ]; then
            PYTHON_VERSION="3.11"
          fi
          docker run -v ${PWD}:${PWD} -w ${PWD} \
              dockershelf/python:${PYTHON_VERSION} bash -c \
              "pip install . && \
              pypicontents pypi -o data/0-9/pypi.json -f logs/0-9/pypi.log -R 0-9"
          docker run -v ${PWD}:${PWD} -w ${PWD} \
              dockershelf/python:${PYTHON_VERSION} bash -c \
              "pip install . && \
              pypicontents stdlib -o stdlib/${PYTHON_VERSION}/stdlib.json"

  approve:
    name: Approve pull request
    runs-on: ubuntu-20.04
    if: github.repository == 'LuisAlejandro/pypicontents'
    needs: build
    steps:
      - name: Approve
        uses: hmarr/auto-approve-action@v2.0.0
        if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'
        with:
          github-token: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
      - name: Approve
        uses: hmarr/auto-approve-action@v2.0.0
        if: github.actor == 'LuisAlejandro'
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

  merge:
    name: Merge pull request
    runs-on: ubuntu-20.04
    if: github.repository == 'LuisAlejandro/pypicontents'
    needs: approve
    steps:
      - name: Merge
        uses: actions/github-script@v5
        if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'
        with:
          github-token: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            })
      - name: Merge
        uses: actions/github-script@v5
        if: github.actor == 'LuisAlejandro'
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            })